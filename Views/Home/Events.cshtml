@{
    ViewData["Title"] = "Events";
    DocsInit init = (DocsInit)ViewData["init"];
    string search = init.Request.Query["search"].FirstOrDefault() ?? "";
    search = search.ToLowerInvariant();
}

The system recognizes <code>@DocsStatic.Meta.Events.Count</code> events!
<hr>
Search: <input type="text" id="boxysearchy" placeholder="Search...">
<script type="text/javascript">document.getElementById('boxysearchy').addEventListener('keydown', function(e) { if (!e)  { var e = window.event; } if (e.keyCode == 13) { document.location.href = '?search=' + document.getElementById('boxysearchy').value; } }, false);</script>
@{
    IEnumerable<ScriptEvent> evts = DocsStatic.Meta.Events.OrderBy((c) => c.EventNames[0]).OrderBy((c) => c.Group);
    string prev = "";
    foreach (ScriptEvent evt in evts)
    {
        if (evt.EventNames.Any((e) => e.ToLowerInvariant().Contains(search)))
        {
            if (evt.Group != prev)
            {
                prev = evt.Group;
                <hr>
            }
            <span class="potato_unused"><br><a href="#evt_@evt.EventNames[0]">@evt.EventNames[0]</a> (@evt.Group)</span>
        }
    }
    string hl = DocsStatic.Config["highlight"];
    foreach (ScriptEvent evt in evts)
    {
        if (!evt.EventNames.Any((e) => e.ToLowerInvariant().Contains(search)))
        {
            continue;
        }
        @DocsStatic.SECTION_SEPARATOR
        <a id="evt_@evt.EventNames[0]" href="#evt_@evt.EventNames[0]">@evt.EventNames[0]</a>
        <table class="meta">
            <tr><td class="small">@evt.Group Event</td><td>
                @foreach (string evtName in evt.EventNames)
                {
                    <span>@evtName<br></span>
                }
                </td></tr>
            <tr><td class="small">Source</td><td>@evt.SourceLocation</td></tr>
            <tr><td class="small">Required Addon(s)</td><td>@evt.Addon</td></tr>
            <tr><td class="small">Last Updated</td><td>@evt.Updated</td></tr>
            <tr><td class="small">Triggers</td><td>@evt.Triggers</td></tr>
            <tr><td class="small">Context Definitions</td><td>@evt.GetContext()</td></tr>
            <tr><td class="small">Determination Options</td><td>@evt.GetDeterminations()</td></tr>
            <tr><td class="small">Is <a href="/Home/Explanations?search=Script%20Event%20Cancellation">Cancellable</a>?</td><td>@evt.Cancellable</td></tr>
            @for (int i = 0; i < evt.Switches.Count; i++)
            {
                <tr><td class="small">switch</td><td>@evt.Switches[i]</td></tr>
            }
            @for (int i = 0; i < evt.Notes.Count; i++)
            {
                <tr><td class="small">Note</td><td>@evt.Notes[i]</td></tr>
            }
            @for (int i = 0; i < evt.Warnings.Count; i++)
            {
                <tr><td class="small">Warning</td><td><span class="meta_warning">@evt.Warnings[i]</span></td></tr>
            }
        </table>
    }
}
